buildscript {
  ext {
    grailsVersion = project.grailsVersion
  }
  repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.grails.plugins:hibernate4:$gormVersion"
    classpath "org.grails.plugins:views-gradle:1.0.4"
  }
}

version "0.1"
group "monitorlocalsvcg3"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"

ext {
  grailsVersion = project.grailsVersion
  gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
  mavenLocal()
  maven { url "https://repo.grails.org/grails/core" }
  mavenCentral()
  maven {
    name "K-Int Private"
    url "http://maven.k-int.com/content/repositories/private"
  }
}

dependencyManagement {
  imports {
    mavenBom "org.grails:grails-bom:$grailsVersion"
  }
  applyMavenExclusions false
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
//  compile "org.springframework.boot:spring-boot-starter-tomcat"
  provided "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-codecs"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-datasource"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-async"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails.plugins:cache"
//  compile "org.grails.plugins:hibernate4"
  compile "org.grails.plugins:hibernate4:$gormVersion"
  compile "org.hibernate:hibernate-core"
  compile "org.hibernate:hibernate-ehcache"
//  compile "org.hibernate:hibernate-ehcache"
  compile "org.grails.plugins:views-json"
  compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
  compile 'org.apache.httpcomponents:httpclient:4.5.2'
  compile 'net.sf.opencsv:opencsv:2.0'
  compile 'commons-io:commons-io:2.4'
  profile "org.grails.profiles:rest-api:$grailsVersion"
  runtime "com.h2database:h2"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testCompile "org.grails:grails-datastore-rest-client"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

  
  /******************** Custom Incluldes below *********************/
  compile "org.springframework.security:spring-security-core:4.0.3.RELEASE"
  runtime 'mysql:mysql-connector-java:5.1.30'
  compile "org.bitbucket.b_c:jose4j:0.4.2"
  compile "au.com.bytecode:opencsv:2.4"

  compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
    exclude group: "org.codehaus.groovy", module: "groovy"
  }

  // Elastic search plugin.
//  compile ("org.grails.plugins:elasticsearch:1.0.0")

  // See if the Gradle project for the grails-tools plugin is declared.
  // If so, include locally, otherwise pull in distributed version from Maven
  println "Looking for GrailsTools..."
  def gtp = parent?.subprojects?.find {
    if (it.name == "grails-tools") {
      compile it
      println "\tfound locally at ${it.projectDir}"
      return true
    }
    false
  }

  if (!gtp) {
    compile 'com.k-int.grails:grails-tools:0.2.2'
    println "\tno local copy found downloading from Maven"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}
